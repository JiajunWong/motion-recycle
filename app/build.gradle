apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: "kotlin-kapt"

androidExtensions {
    experimental = true
}

android {
    compileSdkVersion 28

    defaultConfig {
        applicationId "io.kaeawc.motionrecycle"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        renderscriptTargetApi 27
        renderscriptSupportModeEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
}

dependencies {

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}"
    implementation "io.arrow-kt:arrow-core:${versions.arrow}"

    // AndroidX Core
    implementation "androidx.appcompat:appcompat:${versions.appCompat}"
    implementation "androidx.core:core:${versions.androidCore}"
    implementation "androidx.core:core-ktx:${versions.androidKtx}"

    // AndroidX UI
    implementation "androidx.recyclerview:recyclerview:${versions.recyclerview}"
    implementation "com.google.android.material:material:${versions.design}"
    implementation "androidx.cardview:cardview:${versions.cardview}"
    implementation "androidx.constraintlayout:constraintlayout:${versions.constraintLayout}"
    implementation "androidx.fragment:fragment:${versions.fragment}"
    implementation "androidx.savedstate:savedstate-bundle:${versions.savedState}"
    implementation "androidx.transition:transition:${versions.transition}"

    // AndroidX Random
    implementation "androidx.browser:browser:${versions.browser}"
    implementation "androidx.media2:media2:${versions.media}"
    implementation "androidx.exifinterface:exifinterface:${versions.exifinterface}"
    implementation "com.android.billingclient:billing:${versions.billing}"

    // Navigation Component
    implementation("androidx.navigation:navigation-fragment:${versions.navigationComponent}") {
        exclude group: 'androidx.fragment', module: 'fragment'
    }

    // Lottie Animation
    implementation "com.airbnb.android:lottie:${versions.lottie}"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:${versions.lifecycle}" // 2.1.0-alpha01
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.lifecycle}" // 2.0.0


    // RxJava & RxAndroid
    implementation "io.reactivex.rxjava2:rxjava:${versions.rxJava}"
    implementation("io.reactivex.rxjava2:rxandroid:${versions.rxAndroid}") {
        exclude group: 'io.reactivex.rxjava2', module: 'rxjava'
    }

    // Logging
    implementation "com.jakewharton.timber:timber:${versions.timber}"

    // Date parsing
    implementation "com.jakewharton.threetenabp:threetenabp:${versions.threeTen}"

    // Dagger 2
    implementation "com.google.dagger:dagger:${versions.dagger}"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"

    // HTTP
    implementation "com.squareup.okio:okio:${versions.okio}"
    implementation "com.squareup.moshi:moshi:${versions.moshi}"
    implementation("com.squareup.okhttp3:okhttp:${versions.okhttp}") {
        exclude group: 'com.squareup.okio', module: 'okio'
    }
    implementation("com.squareup.okhttp3:mockwebserver:${versions.okhttpMockWebserver}") {
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    }
    implementation("com.squareup.retrofit2:retrofit:${versions.retrofit}") {
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    }
    implementation("com.squareup.retrofit2:converter-moshi:${versions.moshiAdapter}") {
        exclude group: 'com.squareup.retrofit2', module: 'retrofit'
    }
    implementation("com.squareup.retrofit2:retrofit-mock:${versions.retrofitMock}") {
        exclude group: 'com.squareup.retrofit2', module: 'retrofit'
    }
    implementation("com.squareup.retrofit2:adapter-rxjava2:${versions.retrofitRxJavaAdapter}") {
        exclude group: 'com.squareup.retrofit2', module: 'retrofit'
        exclude group: 'io.reactivex.rxjava2', module: 'rxjava'
    }

    // Image Loading
    implementation("com.github.bumptech.glide:glide:${versions.glide}") {
        exclude group: 'androidx.fragment', module: 'fragment'
    }
    implementation("com.github.bumptech.glide:recyclerview-integration:${versions.glideRecyclerView}") {
        exclude group: 'com.github.bumptech.glide', module: 'glide'
    }
    implementation("com.github.bumptech.glide:okhttp3-integration:${versions.glideOkHttp}") {
        exclude group: 'com.github.bumptech.glide', module: 'glide'
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    }
    implementation("jp.wasabeef:glide-transformations:${versions.glideTransformations}") {
        exclude group: 'com.github.bumptech.glide', module: 'glide'
    }
    kapt "com.github.bumptech.glide:compiler:${versions.glideAnnotations}"

    // Room Database
    api "androidx.room:room-common:${versions.room}"
    api "androidx.room:room-rxjava2:${versions.roomRx}"
    kapt "androidx.room:room-compiler:${versions.roomCompiler}"

    // Unit Testing
    testImplementation "junit:junit:${versions.junit}"
    testImplementation "org.mockito:mockito-core:${versions.mockito}"
    testImplementation("com.nhaarman.mockitokotlin2:mockito-kotlin:${versions.mockitoForKotlin}") {
        exclude group: "org.jetbrains.kotlin", module: "kotlin-stdlib"
        exclude group: "org.jetbrains.kotlin", module: "kotlin-reflect"
    }
}
